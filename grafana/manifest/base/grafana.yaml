---
# Source: grafana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: false
metadata:
  labels:
    helm.sh/chart: grafana-7.3.7
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: "10.4.0"
    app.kubernetes.io/managed-by: Helm
  name: grafana-demo
  namespace: default
---
# Source: grafana/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: grafana-demo
  namespace: default
  labels:
    helm.sh/chart: grafana-7.3.7
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: "10.4.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  
  admin-user: "YWRtaW4="
  admin-password: "YWRtaW5hZG1pbg=="
  ldap-toml: ""
---
# Source: grafana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-demo
  namespace: default
  labels:
    helm.sh/chart: grafana-7.3.7
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: "10.4.0"
    app.kubernetes.io/managed-by: Helm
data:
  
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [server]
    domain = ''
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - access: proxy
      name: VictoriaMetrics
      type: prometheus
      url: http://vmauth-demo.default.svc.cluster.local:8427/select/0/prometheus
  dashboardproviders.yaml: |
    apiVersion: 1
    providers:
    - disableDeletion: false
      editable: true
      folder: ""
      name: default
      options:
        path: /var/lib/grafana/dashboards/default
      orgId: 1
      type: file
  download_dashboards.sh: |
    #!/usr/bin/env sh
    set -euf
    mkdir -p /var/lib/grafana/dashboards/default
  
    curl -skf \
    --connect-timeout 60 \
    --max-time 60 \
    -H "Accept: application/json" \
    -H "Content-Type: application/json;charset=UTF-8" \
      "https://grafana.com/api/dashboards/1860/revisions/36/download" \
      | sed '/-- .* --/! s/"datasource":.*,/"datasource": "VictoriaMetrics",/g' \
    > "/var/lib/grafana/dashboards/default/node-exporter.json"
---
# Source: grafana/templates/dashboards-json-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-demo-dashboards-default
  namespace: default
  labels:
    helm.sh/chart: grafana-7.3.7
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: "10.4.0"
    app.kubernetes.io/managed-by: Helm
    dashboard-provider: default
data:
  {}
---
# Source: grafana/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: grafana-7.3.7
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: "10.4.0"
    app.kubernetes.io/managed-by: Helm
  name: grafana-demo-clusterrole
rules: []
---
# Source: grafana/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: grafana-demo-clusterrolebinding
  labels:
    helm.sh/chart: grafana-7.3.7
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: "10.4.0"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: grafana-demo
    namespace: default
roleRef:
  kind: ClusterRole
  name: grafana-demo-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: grafana/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: grafana-demo
  namespace: default
  labels:
    helm.sh/chart: grafana-7.3.7
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: "10.4.0"
    app.kubernetes.io/managed-by: Helm
rules: []
---
# Source: grafana/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: grafana-demo
  namespace: default
  labels:
    helm.sh/chart: grafana-7.3.7
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: "10.4.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: grafana-demo
subjects:
- kind: ServiceAccount
  name: grafana-demo
  namespace: default
---
# Source: grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: grafana-demo
  namespace: default
  labels:
    helm.sh/chart: grafana-7.3.7
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: "10.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: 3000
      nodePort: 30000
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: demo
---
# Source: grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-demo
  namespace: default
  labels:
    helm.sh/chart: grafana-7.3.7
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: "10.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: demo
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: demo
      annotations:
        checksum/config: 91ac5618cc18378f18e13bb03562d2555b55f99e6ed2fac82d156b93acb91127
        checksum/dashboards-json-config: 33616d2e38267e09265d6a40ff6b004b8f666041fb25fe3daba7154082814a16
        checksum/sc-dashboard-provider-config: 593c0a8778b83f11fe80ccb21dfb20bc46705e2be3178df1dc4c89d164c8cd9c
        checksum/secret: 3fc61fd51ec2ae4cf7f168ca16175a3e411c54be099bb6e5c962d7ad38ea8133
        kubectl.kubernetes.io/default-container: grafana
    spec:
      
      serviceAccountName: grafana-demo
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsNonRoot: true
        runAsUser: 472
      initContainers:
        - name: download-dashboards
          image: "docker.io/curlimages/curl:7.85.0"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args: [ "-c", "mkdir -p /var/lib/grafana/dashboards/default && /bin/sh -x /etc/grafana/download_dashboards.sh" ]
          env:
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/download_dashboards.sh"
              subPath: download_dashboards.sh
            - name: storage
              mountPath: "/var/lib/grafana"
      enableServiceLinks: true
      containers:
        - name: grafana
          image: "docker.io/grafana/grafana:10.4.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: config
              mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
              subPath: "datasources.yaml"
            - name: config
              mountPath: "/etc/grafana/provisioning/dashboards/dashboardproviders.yaml"
              subPath: "dashboardproviders.yaml"
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
            - name: gossip-tcp
              containerPort: 9094
              protocol: TCP
            - name: gossip-udp
              containerPort: 9094
              protocol: UDP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-demo
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-demo
                  key: admin-password
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
      volumes:
        - name: config
          configMap:
            name: grafana-demo
        - name: dashboards-default
          configMap:
            name: grafana-demo-dashboards-default
        - name: storage
          emptyDir: {}
---
